{"ast":null,"code":"var _jsxFileName = \"/home/lily/Documents/CODE/Udemy/REACT/01-Expenses-App/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../Filter/ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(_ref) {\n  _s();\n  let {\n    items\n  } = _ref;\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  // const [ filteredList, setFilteredList ] = useState( items );\n\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n\n    // if ( selectedYear === \"2019\" ) {\n    //      filteredExpenses = items.filter( function( expense ) {\n    //     return expense.date.getFullYear() === 2019;\n    //   } );\n\n    // }; \n\n    // if ( selectedYear === \"2020\" ) {\n    //          filteredExpenses = items.filter( function( expense ) {\n    //         return expense.date.getFullYear() === 2020;\n    //       } );\n    // };\n\n    // if ( selectedYear === \"2021\" ) {\n    //          filteredExpenses = items.filter( function( expense ) {\n    //         return expense.date.getFullYear() === 2021;\n    //       } );\n    // };\n\n    // if ( selectedYear === \"2022\" ) {\n    //          filteredExpenses = items.filter( function( expense ) {\n    //         return expense.date.getFullYear() === 2022;\n    //       } );\n\n    // };        \n\n    // setFilteredList( filteredExpenses );\n  }\n  ;\n  const filteredList = items.filter(function (expense) {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 31\n  }, this);\n  if (filteredList.length > 0) {\n    expensesContent = filteredList.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"oxHSPFhpm3u9o/ZA3x++FXNpmZ8=\");\n_c = Expenses;\n;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","useEffect","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","_ref","_s","items","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredList","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["/home/lily/Documents/CODE/Udemy/REACT/01-Expenses-App/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"../Filter/ExpensesFilter\";\n\nfunction Expenses( { items } ) {\n\n    const [ filteredYear, setFilteredYear ] = useState( \"2020\" );\n    // const [ filteredList, setFilteredList ] = useState( items );\n\n    function filterChangeHandler( selectedYear ) {\n\n        setFilteredYear( selectedYear );  \n\n        // if ( selectedYear === \"2019\" ) {\n            //      filteredExpenses = items.filter( function( expense ) {\n            //     return expense.date.getFullYear() === 2019;\n            //   } );\n             \n        // }; \n\n\n        // if ( selectedYear === \"2020\" ) {\n        //          filteredExpenses = items.filter( function( expense ) {\n        //         return expense.date.getFullYear() === 2020;\n        //       } );\n        // };\n\n\n        // if ( selectedYear === \"2021\" ) {\n        //          filteredExpenses = items.filter( function( expense ) {\n        //         return expense.date.getFullYear() === 2021;\n        //       } );\n        // };\n\n         \n        // if ( selectedYear === \"2022\" ) {\n        //          filteredExpenses = items.filter( function( expense ) {\n        //         return expense.date.getFullYear() === 2022;\n        //       } );\n              \n        // };        \n        \n        // setFilteredList( filteredExpenses );\n    };\n\n        const filteredList = items.filter( function( expense ) {\n            return expense.date.getFullYear().toString() === filteredYear;\n        });\n\n                \n        let expensesContent = <p>No expenses found.</p>;\n\n        if ( filteredList.length > 0 ) {\n\n        expensesContent = filteredList.map( ( expense )=> (\n                        \n            <ExpenseItem \n                key={ expense.id }\n                title={ expense.title } \n                amount={ expense.amount } \n                date={ expense.date } \n            /> \n        ) ); \n                        \n        }\n\n    return (\n\n        <div>\n            <Card className=\"expenses\" >      \n                <ExpensesFilter \n                    selected={ filteredYear }\n                    onChangeFilter={ filterChangeHandler } \n                />    \n                \n                {/* { filteredList.length === 0 \n                    ? \n                        ( <p>No expenses found.</p> ) \n                    : \n                        ( filteredList.map( expense => \n                        <ExpenseItem \n                            key={ expense.id }\n                            title={ expense.title } \n                            amount={ expense.amount } \n                            date={ expense.date } \n                        /> ) )\n                } */}\n                {/* could also use:\n\n                filteredList.length === 0 && <p>No expenses found.</p>\n                filteredList.length > 0 && \n                    filteredList.map( expense => \n                        <ExpenseItem \n                            key={ expense.id }\n                            title={ expense.title } \n                            amount={ expense.amount } \n                            date={ expense.date } \n                        /> ) \n\n                ...instead of the ternary operator used above\n                \n                OR\n                \n                for the if statement we did above we would just do:\n\n                        \n                \n                \n                */}\n            { expensesContent }\n            </Card>\n        </div>\n    )\n\n};\n\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,QAAQA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAExB,MAAM,CAAEG,YAAY,EAAEC,eAAe,CAAE,GAAGZ,QAAQ,CAAE,MAAO,CAAC;EAC5D;;EAEA,SAASa,mBAAmBA,CAAEC,YAAY,EAAG;IAEzCF,eAAe,CAAEE,YAAa,CAAC;;IAE/B;IACI;IACA;IACA;;IAEJ;;IAGA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;;IAEA;;IAEA;EACJ;EAAC;EAEG,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAE,UAAUC,OAAO,EAAG;IACnD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKT,YAAY;EACjE,CAAC,CAAC;EAGF,IAAIU,eAAe,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE/C,IAAKX,YAAY,CAACY,MAAM,GAAG,CAAC,EAAG;IAE/BN,eAAe,GAAGN,YAAY,CAACa,GAAG,CAAIX,OAAO,iBAEzCX,OAAA,CAACJ,WAAW;MAER2B,KAAK,EAAGZ,OAAO,CAACY,KAAO;MACvBC,MAAM,EAAGb,OAAO,CAACa,MAAQ;MACzBZ,IAAI,EAAGD,OAAO,CAACC;IAAM,GAHfD,OAAO,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAInB,CACH,CAAC;EAEH;EAEJ,oBAEIpB,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACH,IAAI;MAAC6B,SAAS,EAAC,UAAU;MAAAV,QAAA,gBACtBhB,OAAA,CAACF,cAAc;QACX6B,QAAQ,EAAGtB,YAAc;QACzBuB,cAAc,EAAGrB;MAAqB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,EAoCJL,eAAe;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd;AAACjB,EAAA,CA9GQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA8GhB;AAED,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}